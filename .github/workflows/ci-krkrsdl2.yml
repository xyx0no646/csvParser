{
	"on": {
		"push": {
			"paths": [
				"**.c",
				"**.h",
				"**.cpp",
				"**.hpp",
				"**.build",
				"**.in",
				"**.py",
				"**.yml",
				"**.gradle",
				"CMakeLists.txt"
			]
		},
		"pull_request": {
			"paths": [
				"**.c",
				"**.h",
				"**.cpp",
				"**.hpp",
				"**.build",
				"**.in",
				"**.py",
				"**.yml",
				"**.gradle",
				"CMakeLists.txt"
			]
		}
	},
	"jobs": {
		"build-ubuntu": {
			"timeout-minutes": 20,
			"steps": [
				{
					"uses": "actions/checkout@v3",
					"with": {
						"submodules": "recursive"
					},
					"name": "Checkout repository"
				},
				{
					"run": "sudo apt-get update && sudo apt-get install build-essential libsdl2-dev",
					"name": "Install dependencies"
				},
				{
					"run": "echo \"/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin\" >> $GITHUB_PATH",
					"name": "Set up Homebrew environment for Github Actions"
				},
				{
					"run": "brew install make nasm ninja cmake",
					"name": "Set up default build tools"
				},
				{
					"run": "cmake -S . -B build",
					"name": "Configure project"
				},
				{
					"run": "cmake --build build",
					"name": "Build project"
				},
				{
					"run": "cd build && 7z a -tzip ${{ github.event.repository.name }}-ubuntu.zip *.so",
					"name": "Archive artifact"
				},
				{
					"uses": "actions/upload-artifact@master",
					"with": {
						"path": "build/*.zip",
						"name": "${{ github.event.repository.name }}-ubuntu"
					},
					"name": "Upload artifact"
				}
			],
			"runs-on": "ubuntu-20.04"
		},
		"build-android": {
			"timeout-minutes": 20,
			"runs-on": "ubuntu-20.04",
			"steps": [
				{
					"uses": "actions/checkout@v3",
					"with": {
						"submodules": "recursive"
					},
					"name": "Checkout repository"
				},
				{
					"run": "sudo apt-get update && sudo apt-get install build-essential libsdl2-dev",
					"name": "Install dependencies"
				},
				{
					"run": "echo \"/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin\" >> $GITHUB_PATH",
					"name": "Set up Homebrew environment for Github Actions"
				},
				{
					"run": "brew install make nasm ninja cmake",
					"name": "Set up default build tools"
				},
				{
					"uses": "nttld/setup-ndk@v1",
					"with": {
						"ndk-version": "r21e"
					},
					"name": "Set up Android NDK",
					"id": "setup_ndk"
				},
				{
					"uses": "actions/setup-java@v3",
					"with": {
						"distribution": "temurin",
						"java-version": "11"
					},
					"name": "Set up Java"
				},
				{
					"run": "cmake -S . -B build -DCMAKE_TOOLCHAIN_FILE=${{ steps.setup_ndk.outputs.ndk-path }}/build/cmake/android.toolchain.cmake -DANDROID_PLATFORM=android-19 -DANDROID_ABI=${{ matrix.platform.android_abi }} ${{ matrix.platform.extra_cmake_flags }}",
					"name": "Configure project"
				},
				{
					"run": "cmake --build build",
					"name": "Build project"
				},
				{
					"run": "cd build && 7z a -tzip ${{ github.event.repository.name }}-android-${{ matrix.platform.android_abi }}.zip *.so",
					"name": "Archive artifact"
				},
				{
					"uses": "actions/upload-artifact@master",
					"with": {
						"path": "build/*.zip",
						"name": "${{ github.event.repository.name }}-android-${{ matrix.platform.android_abi }}"
					},
					"name": "Upload artifact"
				}
			],
			"strategy": {
				"matrix": {
					"platform": [
						{
							"android_abi": "armeabi-v7a",
							"extra_cmake_flags": "-DANDROID_ARM_NEON=ON"
						},
						{
							"android_abi": "arm64-v8a",
							"extra_cmake_flags": ""
						},
						{
							"android_abi": "x86",
							"extra_cmake_flags": ""
						},
						{
							"android_abi": "x86_64",
							"extra_cmake_flags": ""
						}
					]
				},
				"fail-fast": false
			}
		},
		"build-web": {
			"timeout-minutes": 20,
			"steps": [
				{
					"uses": "actions/checkout@v3",
					"with": {
						"submodules": "recursive"
					},
					"name": "Checkout repository"
				},
				{
					"run": "sudo apt-get update && sudo apt-get install build-essential libsdl2-dev git",
					"name": "Install dependencies"
				},
				{
					"uses": "actions/cache@v2",
					"with": {
						"path": "${{env.EM_CACHE_FOLDER}}",
						"key": "${{env.EM_VERSION}}-${{ runner.os }}"
					},
					"name": "Setup cache",
					"id": "cache-system-libraries"
				},
				{
					"uses": "mymindstorm/setup-emsdk@v11",
					"with": {
						"version": "${{env.EM_VERSION}}",
						"actions-cache-folder": "${{env.EM_CACHE_FOLDER}}"
					}
				},
				{
					"run": "echo \"/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin\" >> $GITHUB_PATH",
					"name": "Set up Homebrew environment for Github Actions"
				},
				{
					"run": "brew install make nasm ninja cmake",
					"name": "Set up default build tools"
				},
				{
					"run": "emcmake cmake -S . -B build",
					"name": "Configure project"
				},
				{
					"run": "cmake --build build",
					"name": "Build project"
				},
				{
					"run": "cd build && 7z a -tzip ${{ github.event.repository.name }}-web.zip *.so",
					"name": "Archive artifact"
				},
				{
					"uses": "actions/upload-artifact@master",
					"with": {
						"path": "build/*.zip",
						"name": "${{ github.event.repository.name }}-web"
					},
					"name": "Upload artifact"
				}
			],
			"env": {
				"EM_CACHE_FOLDER": "emsdk-cache",
				"EM_VERSION": "3.1.24"
			},
			"runs-on": "ubuntu-20.04"
		},
		"create-release": {
			"needs": [
				"build-android",
				"build-web",
				"build-macos-cmake",
				"build-ubuntu"
			],
			"runs-on": "ubuntu-20.04",
			"steps": [
				{
					"uses": "actions/download-artifact@master",
					"name": "Download all artifacts"
				},
				{
					"run": "cp -t . ${{ github.event.repository.name }}-*/*.zip",
					"name": "Prepare artifacts for release"
				},
				{
					"uses": "marvinpinto/action-automatic-releases@latest",
					"with": {
						"repo_token": "${{ secrets.GITHUB_TOKEN }}",
						"files": "*.zip",
						"automatic_release_tag": "latest_krkrsdl2",
						"prerelease": "true",
						"title": "Latest development builds"
					},
					"name": "Create prerelease",
					"if": "github.ref == 'refs/heads/krkrsdl2'"
				}
			],
			"timeout-minutes": 20,
			"if": "github.ref == 'refs/heads/krkrsdl2'"
		},
		"build-macos-cmake": {
			"timeout-minutes": 20,
			"steps": [
				{
					"uses": "actions/checkout@v3",
					"with": {
						"submodules": "recursive"
					},
					"name": "Checkout repository"
				},
				{
					"run": "brew install make nasm ninja cmake p7zip",
					"name": "Set up default build tools"
				},
				{
					"run": " env CMAKE_OSX_ARCHITECTURES='x86_64;arm64' cmake -S . -B build",
					"name": "Configure project"
				},
				{
					"run": "cmake --build build",
					"name": "Build project"
				},
				{
					"run": "cd build && 7z a -tzip ${{ github.event.repository.name }}-macos.zip *.so",
					"name": "Archive artifact"
				},
				{
					"uses": "actions/upload-artifact@master",
					"with": {
						"path": "build/*.zip",
						"name": "${{ github.event.repository.name }}-macos"
					},
					"name": "Upload artifact"
				}
			],
			"runs-on": "macos-11"
		}
	},
	"name": "Continuous Integration (Kirikiri SDL2)",
	"env": {
		"HOMEBREW_NO_AUTO_UPDATE": "1",
		"HOMEBREW_NO_ANALYTICS": "1",
		"HOMEBREW_NO_INSTALL_UPGRADE": "1",
		"CMAKE_GENERATOR": "Ninja",
		"HOMEBREW_NO_INSTALL_CLEANUP": "1"
	}
}
